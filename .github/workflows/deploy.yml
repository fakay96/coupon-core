name: Deploy to DigitalOcean Kubernetes

on:
  workflow_call:
    inputs:
      version_tag:
        description: 'The version tag to deploy'
        required: true
        type: string
    secrets:
      KUBECONFIG_CONTENT:
        required: true

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Configure kubectl for DigitalOcean
      - name: Configure kubectl for DigitalOcean
        run: |
          mkdir -p ~/.kube                            # Ensure .kube directory exists
          echo "${{ secrets.KUBECONFIG_CONTENT }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config                    # Secure the kubeconfig file

      # Step 3: Install Helm
      - name: Install Helm
        run: |
          curl -fsSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      # Step 4: Capture current image tags for rollback (optional)
      - name: Capture current image tags
        id: capture_images
        run: |
          CURRENT_BACKEND_IMAGE=$(kubectl get deployment backend-service -n production \
            -o=jsonpath='{.spec.template.spec.containers[0].image}')
          CURRENT_WEBSCRAPER_IMAGE=$(kubectl get deployment web-scraper-service -n production \
            -o=jsonpath='{.spec.template.spec.containers[0].image}')

          echo "CURRENT_BACKEND_IMAGE=$CURRENT_BACKEND_IMAGE" >> "$GITHUB_ENV"
          echo "CURRENT_WEBSCRAPER_IMAGE=$CURRENT_WEBSCRAPER_IMAGE" >> "$GITHUB_ENV"
          echo "backend_image=$CURRENT_BACKEND_IMAGE" >> "$GITHUB_OUTPUT"
          echo "webscraper_image=$CURRENT_WEBSCRAPER_IMAGE" >> "$GITHUB_OUTPUT"

      # Step 5: Deploy backend and web scraper services with Helm
      - name: Deploy services with Helm
        env:
          VERSION_TAG: ${{ inputs.version_tag }}
        run: |
          helm upgrade --install backend-service ./helm/backend-chart \
            --set image.repository=fakay96/backend \
            --set image.tag=$VERSION_TAG \
            --namespace production --create-namespace

          helm upgrade --install web-scraper-service ./helm/webscraper-chart \
            --set image.repository=fakay96/web_scraper \
            --set image.tag=$VERSION_TAG \
            --namespace production --create-namespace

      # Step 6: Verify deployment status
      - name: Verify deployment status
        run: |
          kubectl rollout status deployment backend-service -n production --timeout=300s
          kubectl rollout status deployment web-scraper-service -n production --timeout=300s

      # Step 7: Rollback on failure (optional)
      - name: Rollback to previous version on failure
        if: failure()
        run: |
          echo "Deployment failed. Rolling back to previous versions."
          helm rollback backend-service 1 --namespace production
          helm rollback web-scraper-service 1 --namespace production
