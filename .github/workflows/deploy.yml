name: Deploy to Kubernetes

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'The version tag to deploy'
        required: true
        type: string
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - staging
          - production
  push:
    branches:
      - main
  workflow_call:
    inputs:
      version_tag:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      KUBECONFIG_CONTENT:
        required: true
      KUBERNETES_SECRETS:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Leverage GitHub environment protection (set up in repo settings) for production
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "NAMESPACE=${{ inputs.environment }}" >> $GITHUB_ENV
          echo "VERSION_TAG=${{ inputs.version_tag }}" >> $GITHUB_ENV

      - name: Configure kubectl for DigitalOcean
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Verify kubeconfig access
        run: kubectl get nodes

      - name: Ensure namespace exists
        run: |
          kubectl get namespace ${{ env.NAMESPACE }} || kubectl create namespace ${{ env.NAMESPACE }}

      - name: Deploy with Helm
        run: |
          if [ "${{ env.NAMESPACE }}" = "staging" ]; then
            helm upgrade --install coupon-service ./k8s/backend \
              --set backend.image.repository=fakay96/coupon-core \
              --set backend.image.tag=${{ env.VERSION_TAG }} \
              --namespace staging --create-namespace \
              -f ./k8s/backend/values/staging-values.yaml \
              --atomic --force --cleanup-on-fail --history-max 5 \
              --timeout 30m0s
          elif [ "${{ env.NAMESPACE }}" = "production" ]; then
            helm upgrade --install coupon-service ./k8s/backend \
              --set backend.image.repository=fakay96/coupon-core \
              --set backend.image.tag=${{ env.VERSION_TAG }} \
              --namespace production --create-namespace \
              -f ./k8s/backend/values/production-values.yaml \
              --atomic --force --cleanup-on-fail --history-max 5 \
              --timeout 30m0s
          else
            echo "Unknown environment: ${{ env.NAMESPACE }}"
            exit 1
          fi

      - name: Verify service endpoints
        run: kubectl get endpoints coupon-service -n ${{ env.NAMESPACE }}

      - name: Debug pod logs on failure
        if: failure()
        run: kubectl logs -l app=backend -n ${{ env.NAMESPACE }} --tail=50

      - name: Rollback on failure
        if: failure()
        run: helm rollback coupon-service 1 --namespace ${{ env.NAMESPACE }}

