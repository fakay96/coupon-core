# Use the official Python slim image as base
FROM python:3.12-slim as BASE

# Set environment variables for Python and GDAL
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/root/.local/bin:$PATH" \
    GDAL_LIBRARY_PATH=/usr/lib/libgdal.so

# Set the working directory
WORKDIR /app

# Install system dependencies in one step and clean up to minimize layers
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    curl \
    gdal-bin \
    python3-pip && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Poetry globally without cache
RUN pip install --no-cache-dir poetry

# Copy only dependency files first for Docker cache optimization
COPY pyproject.toml poetry.lock ./

# Install only production dependencies (avoid installing dev dependencies)
RUN poetry install --no-root --no-dev --no-interaction --no-ansi

# Install additional Python packages directly using pip to minimize Dockerfile complexity
RUN pip install torch torchvision torchaudio --no-cache-dir

# Copy the rest of the application code
COPY coupon_core/ coupon_core/
COPY authentication/ authentication/
COPY geodiscounts/ geodiscounts/
COPY manage.py .

# Copy and set permissions for the initialization script
COPY Scripts/entryfile_backend.sh /app/init_db.sh
RUN chmod +x /app/init_db.sh

