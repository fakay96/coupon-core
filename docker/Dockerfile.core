# syntax=docker/dockerfile:1

ARG TARGETPLATFORM
ARG VARIANT=slim

FROM python:3.12-${VARIANT} AS builder

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/root/.local/bin:$PATH" \
    POETRY_VIRTUALENVS_CREATE=false

RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    curl \
    python3-pip \
    netcat-traditional \
    gdal-bin \
    libgdal-dev \
    python3-gdal && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

RUN curl -sSL https://install.python-poetry.org | python3 - && \
    ln -s /root/.local/bin/poetry /usr/local/bin/poetry

WORKDIR /app

COPY pyproject.toml poetry.lock ./
RUN poetry install --no-root --no-interaction --no-ansi

COPY coupon_core/ coupon_core/
COPY authentication/ authentication/
COPY geodiscounts/ geodiscounts/
COPY manage.py .

# --- Final Stage ---
FROM python:3.12-${VARIANT}

RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    netcat-traditional \
    gdal-bin \
    libgdal-dev \
    python3-gdal && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy dependencies from builder
COPY --from=builder /root/.local /root/.local
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin


# Fix GDAL path issues
RUN ln -s /usr/lib/aarch64-linux-gnu/libgdal.so /usr/lib/libgdal.so || true

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/root/.local/bin:$PATH" \
    POETRY_VIRTUALENVS_CREATE=false \
    PROJ_LIB="/usr/share/proj"

WORKDIR /app

COPY --from=builder /app /app

EXPOSE 8000

COPY Scripts/entryfile_backend.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Debugging steps
RUN python -m pip list
RUN poetry show
RUN gdalinfo --version
RUN ldconfig -p | grep gdal

ENTRYPOINT ["/app/entrypoint.sh"]

CMD ["tail", "-f", "/dev/null"]
