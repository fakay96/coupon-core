apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: {{ .Values.backend.replicaCount | default 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-milvus
        image: busybox:1.28
        command:
        - sh
        - -c
        - |
          echo "Waiting for Milvus..."
          timeout 60 sh -c 'until nc -z {{ .Release.Name }}-milvus.production.svc.cluster.local 19530; do echo waiting for milvus; sleep 2; done'
          echo "Milvus is ready!"

      - name: wait-for-etcd
        image: busybox:1.28
        command:
        - sh
        - -c
        - |
          echo "Waiting for ETCD..."
          timeout 60 sh -c 'until nc -z {{ .Release.Name }}-etcd.production.svc.cluster.local 2379; do echo waiting for etcd; sleep 2; done'
          echo "ETCD is ready!"

      - name: wait-for-minio
        image: busybox:1.28
        command:
        - sh
        - -c
        - |
          echo "Waiting for MinIO..."
          timeout 60 sh -c 'until nc -z {{ .Release.Name }}-minio.production.svc.cluster.local 9000; do echo waiting for minio; sleep 2; done'
          echo "MinIO is ready!"

      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: "{{ .Values.backend.image.pullPolicy }}"
        ports:
          - containerPort: {{ .Values.backend.service.port }}
        resources:
          requests:
            memory: "{{ .Values.backend.resources.requests.memory }}"
            cpu: "{{ .Values.backend.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.backend.resources.limits.memory }}"
            cpu: "{{ .Values.backend.resources.limits.cpu }}"
        env:
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: DB_PORT
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: DB_USER
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: DB_PASSWORD
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: DB_HOST
          - name: ENVIRONMENT
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: ENVIRONMENT
          - name: MILVUS_HOST
            value: "{{ .Release.Name }}-milvus.milvus.svc.cluster.local"
          - name: MILVUS_PORT
            value: "19530"
